app.numPeriods = 10*app.session.decisionSituations.length;
app.groupSize = 1;

// Disable automatic modification of "src" attributes, instead the full path is pre-specified. Automation does not work with dynamic values yet.
app.modifyPathsToIncludeId = false;

let stage = app.newStage('hello');
stage.playerStart = function(player) {
    let sit = Math.floor((player.period().id-1)/10);
    let participant = player.participant;
    let situation = app.session.decisionSituations[participant.decSitSequence[sit]];
    player.situation = situation;
    player.situationName = situation.name;
    if (participant.decSitABSeq[sit] == 'AB') {
        player.left = player.situation.optionA;
        player.right = player.situation.optionB;
        player.left.letter = 'A';
        player.right.letter = 'B';
    } else {
        player.left = player.situation.optionB;
        player.right = player.situation.optionA;
        player.left.letter = 'B';
        player.right.letter = 'A';
    }
    player.leftText = player.left.text;
    player.rightText = player.right.text;
    player.selectedOption = -1;
    player.selectedOptionLetter = -1;
    if (player.period().id === 1) {
        player.participant.latestPayoffs = [];
    }
}

stage.playerEnd = function(player) {
    player.participant.latestPayoffs.push({
        text: player.selectedOption,
        letter: player.selectedOptionLetter
    });
    // if (player.period().id == app.numPeriods) {
    //     let round = Utils.randomInt(0, app.numPeriods);
    //     let drawnPayoff = player.participant.latestPayoffs[round];
    //     player.participant.payoffs.push({
    //         round: round, 
    //         payoff: drawnPayoff.text
    //     });
    // }
}

stage.activeScreen = `
<p>Please select option A or option B and click OK.</p>
<div style='display: flex; align-items: center'>
    <div style='flex: 1 1 auto; display: flex; align-items: center; flex-direction: column; justify-content: center'>
        <img :src='"14anita/images/" + player.left.filename' width=600 onclick='selectOption(this)' :data-optiontext='player.left.text' :data-optionletter='player.left.letter'>
        Option A
    </div>
    <button :disabled='player.selectedOption == -1' style='margin: 20px'>OK</button>
    <div style='flex: 1 1 auto; display: flex; align-items: center; flex-direction: column; justify-content: center'>
        <img :src='"14anita/images/" + player.right.filename' width=600 onclick='selectOption(this)' :data-optiontext='player.right.text' :data-optionletter='player.right.letter'>
        Option B
    </div>
    <input id='choice' style='z-index: -10; position: absolute' name='player.selectedOption'>
    <input id='choiceLetter' style='z-index: -10; position: absolute' name='player.selectedOptionLetter'>
</div>
<script>
jt.connected = function() {

    jt.socket.on('playerUpdate', function(player) {
        $('body').css('display', 'none');

        setTimeout(function() {
            $('body').css('display', 'block');
        },
        1000);
    
        $('img').removeClass('selected');
    });
}
selectOption = function(el) {
    jt.vue.player.selectedOption = el.dataset.optiontext;
    jt.vue.player.selectedOptionLetter = el.dataset.optionletter;
    $('img').removeClass('selected');
    el.classList.add('selected');
    document.getElementById('choice').value = jt.vue.player.selectedOption;
    document.getElementById('choiceLetter').value = jt.vue.player.selectedOptionLetter;
}
</script>
<style>
img {
    border: 4px solid transparent;
    cursor: pointer;
}
img:hover {
    border: 4px solid rgba(0, 0, 255, 0.5);
}
.selected {
    border: 4px solid blue;
}
.selected:hover {
    border: 4px solid blue;
}
#jtree {
    min-width: unset;
}
body {
    max-width: unset;
}
</style>
` 

stage.autoplay = `
    if (jt.vue.player.selectedOption == -1) {
        selectOption($('img')[Math.random() < 0.5 ? 0 : 1]);
    } else {
        $('form').submit();
    }
`