app.isStandaloneApp = false;
app.numPeriods = app.session.block4NumRevisions;
app.groupSize = 1;

// Disable automatic modification of "src" attributes, instead the full path is pre-specified. Automation does not work with dynamic values yet.
app.modifyPathsToIncludeId = false;

let stage = app.newStage('decide');
stage.playerStart = function(player) {
    let participant = player.participant;
    player.sit = player.period().id - 1;
    player.decSitABSeq = participant.decSitABSeq[player.sit];
    let block = participant.reviewSequence[player.sit]; // 0, 1 or 2
    player.choiceLetters = '';
    player.situation = app.session.decisionSituations[participant.decSitSequence[block]];
    player.block3Payoffs = participant.block3Payoffs[block];
    for (let i=0; i<player.block3Payoffs.length; i++) {
        if (player.decSitABSeq == 'AB') {
            player.choiceLetters += player.block3Payoffs[i].letter;
        } else {
            if (player.block3Payoffs[i].letter === 'A') {
                player.choiceLetters += 'B';
            } else {
                player.choiceLetters += 'A';
            }
        }
    }
    if (player.decSitABSeq == 'AB') {
        player.left = player.situation.optionA;
        player.right = player.situation.optionB;
        player.left.letter = 'A';
        player.right.letter = 'B';
    } else {
        player.left = player.situation.optionB;
        player.right = player.situation.optionA;
        player.left.letter = 'B';
        player.right.letter = 'A';
    }
    if (player.sit === 0) {
        participant.block4Payoffs = [];
    }
}
stage.playerEnd = function(player) {
    player.revisedChoiceLetters = player.choiceLetters;
    if (player.change == 'allA') {
        player.revisedChoiceLetters = 'A'.repeat(app.session.repsForBlock3);
    } else if (player.change == 'allB') {
        player.revisedChoiceLetters = 'B'.repeat(app.session.repsForBlock3);
    } 

    let payoffs = [];
    player.participant.block4Payoffs.push(payoffs);
    for (let i=0; i<player.block3Payoffs.length; i++) {
        if (player.revisedChoiceLetters[i] === 'A') {            
            payoffs.push(player.left);
        } else {
            payoffs.push(player.right);
        }
    }

}
stage.activeScreen = `
<p>Previously you made {{player.choiceLetters.length}} consecutive choices between the following options:</p>
<div style='display: flex; align-items: center; font-size: 24pt'>
    <div style='flex: 1 1 auto; display: flex; flex-direction: column; justify-content: center; margin: 50px'>
        <img :src='"14anita/images/" + player.left.filename' width='600'>
        <p>Option A</p>
    </div>
    <div style='flex: 1 1 auto; display: flex; flex-direction: column; justify-content: center; margin: 50px'>
        <img :src='"14anita/images/" + player.right.filename' width='600'>
        <p>Option B</p>
    </div>
</div>

<span>Your choices were: <span style='font-size: 24pt'>{{player.choiceLetters}}</span></span>
<p>Below you have the option to revise your choices or to keep your choices the same. For example, if you click on "All A" ("All B") below, all previous choices for the {{app.session.repsForBlock3}} questions you made will not be considered for payout but instead the computer will calculate payout as if you chose option A (option B) in all {{app.session.repsForBlock3}} questions.</p>
<div>
    <button tabindex='-1' v-show='player.choiceLetters !== "A".repeat(app.session.repsForBlock3)' type='submit' name='player.change' value='allA'>All A</button>
    <button tabindex='-1' v-show='player.choiceLetters !== "B".repeat(app.session.repsForBlock3)' type='submit' name='player.change' value='allB'>All B</button>
    <button tabindex='-1' type='submit' name='player.change' value='noChange'>Original choices</button>
</div>
<style>
#jtree {
    min-width: unset;
}
body {
    max-width: unset;
}
</style>`
