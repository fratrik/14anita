session.addApp('block1_prefIntensity.jtt');
session.addApp('block2_prob.jtt');
session.addApp('block3_AorB.jtt');
session.addApp('block4_reviewAorB.jtt');
session.addApp('block2_prob.jtt');
session.addApp('survey.jtt');
session.addApp('results.jtt');

session.decisionSituations = [
    {
        name: 'HardLottery',
        showImageForPrefInt: false,
        optionA: {
            text: '[20, 20, 180, 180]',
            alternatives: {
                min: 20,
                max: 180,
                step: 5
            },
            filename: 'HL A.png'
        },
        optionB: {
            text: '[64, 90, 90, 112]',
            alternatives: {
                min: 60,
                max: 115,
                step: 5
            },
            filename: 'HL B.png'
        },
    },
    {
        name: 'ChocolateBars',
        showImageForPrefInt: true,
        optionA: {
            text: 'Chocolate bar 1',
            alternatives: {
                min: 0,
                max: 50,
                step: 5
            },
            filename: 'CH A.png'
        },
        optionB: {
            text: 'Chocolate bar 2',
            alternatives: {
                min: 0,
                max: 50,
                step: 5
            },
            filename: 'CH B.png'
        },
    },
    {
        name: 'EasyLottery',
        showImageForPrefInt: false,
        optionA: {
            text: '[94, 94, 94, 94]',
            alternatives: {
                min: 90,
                max: 96,
                step: 1
            },
            filename: 'EL A.png'
        },
        optionB: {
            text: '[94, 94, 96, 96]',
            alternatives: {
                min: 90,
                max: 96,
                step: 1
            },
            filename: 'EL B.png'
        },
    }
]

for (let i in session.decisionSituations) {
    let sit = session.decisionSituations[i];
    let AB = ['A', 'B'];
    for (let x in AB) {
        let option = sit['option' + AB[x]];
        let alts = option.alternatives;
        option.alternativesList = [];
        for (let i=alts.min; i<=alts.max; i+=alts.step) {
            option.alternativesList.push(i);
        }
    }
}

session.participantStart = function(participant) {
    participant.payoffs = [];
    let sequence = [0, 1, 2];    
    let x = Utils.shuffle(sequence);
    let indexOf2 = x.indexOf(2);
    x.splice(indexOf2+1, 0, 3);
    x.push(4);
    x.push(5);
    x.push(6);
    participant.appSequence = x;
    participant.decSitSequence = Utils.shuffle([0, 1, 2]);
    participant.reviewSequence = Utils.shuffle([0, 1, 2]);
    participant.reviewSequence.splice(2, 1);
    participant.decSitABSeq = [
        Math.random() < 0.5 ? 'AB' : 'BA',
        Math.random() < 0.5 ? 'AB' : 'BA',
        Math.random() < 0.5 ? 'AB' : 'BA'
    ];
}

session.getApp = function(participant) {
    return session.apps[participant.appSequence[participant.appIndex-1]];
}